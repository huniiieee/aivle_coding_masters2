문제: (백트래킹)
가영이와 나영이가 영단어로 끝말잇기를 하고 있습니다. 
하지만 둘다 영어를 굉장히 못하기 때문에 노트에 영단어를 같이 적어둔 채로 끝말잇기를 하고 있습니다. 

당연하게도 앞에서 이미 나왔던 단어를 말하는 것은 허용되지 않으며, 
상대가 마지막으로 말했던 단어의 맨 끝 알파벳으로 시작하는 영단어를 말해야 합니다. 
만약 그런 단어를 말할 수 없다면 패배입니다. 

몇 개 되지도 않는 노트의 단어들을 보며 진지하게 플레이하는 두 사람을 보던 다영이는 저렇게 써두면 
승부가 항상 정해진 것이 아닌가하는 생각이 들었습니다. 

노트에 쓰여진 단어가 주어졌을 때 가영과 나영 두 사람 중 어느 사람이 이기게 될지 예측하는 프로그램을 작성해주세요. 

단, 가영과 나영은 항상 최선을 다해 플레이하며 항상 가영이가 턴을 시작합니다. 

답안:

import java.io.*;

import java.util.*;

// don't change 'Main' class name and  'public' accessor.

public class Main {
    static boolean result=false;
    static int N=0;
    static void backtrack(String []temp,boolean []visited,int start,int cnt)
    {
        if(result)
            return;
        char last=temp[start].charAt(temp[start].length()-1);
        boolean flag=true;
        for (int i = 0; i < N; i++) {
            char first=temp[i].charAt(0);
            if(!visited[i]&&last==first){
                flag=false;
                visited[i]=true;
                backtrack(temp,visited,i,cnt+1);
                visited[i]=false;
            }
        }
        if(flag){
            if(cnt%2==1)
                result=true;
        }


    }
    public static void main(String[] args) throws IOException {

        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));

        N=Integer.parseInt(br.readLine());
        String [] temp=new String[N];
        for (int i = 0; i < N; i++) {
            temp[i]= br.readLine();
        }

        for (int i = 0; i < N; i++) {
            boolean [] visited=new boolean[N];
            visited[i]=true;
            backtrack(temp,visited,i,1);
            if(result){
                System.out.println("gayeong");
                return;
            }
        }
        System.out.println("nayeong");

    }
}