문제:
기성이는 온라인 커뮤니티를 운영하는 회사의 게시판 관리자입니다. 
그의 주요 업무는 불필요한 게시글(광고 게시글, 도배성 게시글 등)을 삭제하는 것입니다. 
기성이가 열심히 일한 결과, 커뮤니티의 평판이 좋아져 수많은 신규 사용자를 유치하는데 성공하였습니다. 
하지만 커뮤니티의 성장에 따른 부작용으로 광고성 게시글과 악성 사용자들이 크게 늘어났습니다.

광고성 게시글 들은 대부분 동일한 제목과 내용으로 등록되기 때문에, 광고 차단 필터를 이용해 대응할 수 있었습니다. 
어떤 문장을 광고 차단 필터에 등록하면, 필터에 등록된 문장을 제목으로 사용하는 게시글은 게시판에 노출되지 않습니다. 
문장이란 여러 단어들 사이에 공백을 하나씩 두고 나열한 것이고, 단어는 하나 이상의 영어 알파벳 소문자들을 공백 없이 이어붙인 것입니다. 
예를 들어 세 단어 buy, our, merch로 문장 buy our merch를 만들 수 있습니다.
악성 사용자는 재미를 위해 광고 차단 필터에 등록된 문장의 두 단어를 골라 자리를 바꾼 것을 제목으로 하는 게시글들을 작성합니다.
문장 buy our merch에 광고 차단 필터가 적용되었다면, 악성 사용자는 merch our buy, buy merch our등의 문장을 제목으로 사용합니다. 
하지만, our merch buy는 어떤 두 단어의 자리를 바꾸어도 buy our merch가 되지 못하므로 제목으로 사용하지 않습니다.

그런데 아뿔싸, 불의의 사고로 광고 차단 필터가 초기화 되었습니다. 
기성이는 만약 악성 사용자가 제목으로 사용한 문장들을 이용해 광고성 게시글의 제목을 복원할 수 있다면 필터를 복구하는데 도움이 될 것이라 생각합니다.
 악성 사용자가 제목으로 사용한 서로 다른 두 개의 문장을 이용할 것인데, 
 적어도 둘의 길이가 같으며 한 쪽에서 등장한 단어는 반드시 다른 쪽에서도 등장해야 도움이 됨을 알 수 있습니다.

악성 사용자가 제목으로 사용한 서로 다른 두 개의 문장이 입력으로 주어집니다. 두 문장의 길이는 같으며, 
한 쪽에서 등장한 단어는 반드시 다른 쪽에서도 등장합니다. 
문제의 상황을 단순하게 만들기 위해 한 문장에 같은 단어가 여러번 등장하는 경우는 주어지지 않습니다.
 두 단어의 자리를 바꾸면 주어진 두 개의 문장을 모두 만들 수 있는 문장이 몇개인지 출력하는 프로그램을 작성해 주세요.

 답안:
import java.io.*; 
 
import java.util.*; 
 
//don't change 'Main' class name and  'public' accessor. 
 
public class Main { 
    static void swap(String[]s,int x,int y) 
    { 
        String temp= s[x]; 
        s[x]=s[y]; 
        s[y]=temp; 
    } 
    public static void main(String[] args) throws IOException { 
 
        Scanner scanner = new Scanner(System.in); 
 
        int temp= scanner.nextInt(); 
        scanner.nextLine(); 
 
        String a = scanner.nextLine(); 
        String b = scanner.nextLine(); 
        String[] as=a.split(\" \"); 
        String[] bs=b.split(\" \"); 
 
        List<Integer> list =new LinkedList<>(); 
        int cnt=0; 
        for (int i = 0; i < as.length; i++) { 
            if(!as[i].equals(bs[i])) 
            { 
                cnt++; 
                list.add(i); 
            } 
 
        } 
        if(cnt==3) 
            System.out.println(3); 
        else 
        { 
            if(cnt==4) 
            { 
                if(as[list.get(0)].equals(bs[list.get(1)])&&as[list.get(2)].equals(bs[list.get(3)])&&as[list.get(1)].equals(bs[list.get(0)])) 
                { 
                    System.out.println(2); 
                    return; 
                } 
                else if(as[list.get(0)].equals(bs[list.get(2)])&&as[list.get(1)].equals(bs[list.get(3)])&&as[list.get(2)].equals(bs[list.get(0)])) 
                { 
                    System.out.println(2); 
                    return; 
                } 
                else if(as[list.get(0)].equals(bs[list.get(3)])&&as[list.get(1)].equals(bs[list.get(2)])&&as[list.get(3)].equals(bs[list.get(0)])) 
                { 
                    System.out.println(2); 
                    return; 
                } 
            } 
            System.out.println(0); 
        } 
 
 
 
 
 
 
    } 
}