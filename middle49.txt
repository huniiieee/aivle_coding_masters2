문제:
군조는 이사를 하려고 짐을 정리하고 있었습니다. 
군조는 대부분의 짐을 정리하는 것을 마무리하였고, 이제 단 3개의 짐만을 남겨두고 있습니다.
 군조는 짐을 깔끔하게 정리하는 것을 좋아하기 때문에, 짐을 짐의 색과 같은 색의 박스에 넣으려고 합니다.
  하지만, 성격이 급한 정인이가 이미 이 3개의 짐을 상자에 넣어버렸다는 사실을 알았습니다.

짐은 총 3개로, 각각 빨간색, 초록색, 파란색입니다. 상자도 총 3개로, 각각 빨간색, 초록색, 
파란색입니다. 정인이는 3개의 짐을 무작위로 각각 한 상자에 하나씩 넣었습니다. 
정인이의 이러한 짐 정리 방식에 화가 난 군조는, 정인이보고 하나의 명령을 내렸습니다. 
이 명령의 내용은 어떤 두 상자를 골라서 각 상자에 들어있는 짐의 위치를 바꾸는 행동을 정확히 10^18번 하는 것으로, 
정인이가 이 행동을 하고 난 후에 모든 짐이 같은 색의 상자에 들어있다면 군조는 정인이를 용서해주려고 하고, 아니라면 정인이에게 벌을 내리려고 합니다.

정인이가 처음에 넣은 짐과 상자의 색이 주어질 때, 정인이가 군조의 명령을 이행한 뒤 군조에게 용서받을 수 있을지 구하는 프로그램을 작성해 주세요.

답안:


import java.io.*;

import java.util.*; 

// don't change 'Main' class name and  'public' accessor. 

public class Main {
	
	public static boolean check(char[] bag)
	{
		if(bag[0]!='R')
			return false;
		if(bag[1]!='G')
			return false;
		if(bag[2]!='B')
			return false;
		return true;
	}
	
	public static void swap(char[] bag,int x ,int y)
	{
		char temp=bag[x];
		bag[x]=bag[y];
		bag[y]=temp;
	}
    public static void main(String[] args) throws IOException { 

        Scanner scanner = new Scanner(System.in); 

        char [] bag = new char[3]; 

        bag[0]= scanner.next().charAt(0);
        bag[1]= scanner.next().charAt(0);
        bag[2]= scanner.next().charAt(0);
        swap(bag,0,1);
        
        if(check(bag))
        {
        	System.out.print("impossible");
        	return;
        }
        swap(bag,1,2);	
        
        if(check(bag))
        {
        	System.out.print("possible");
        	return;
        }
        swap(bag,0,2);
        
        if(check(bag))
        {
        	System.out.print("impossible");
        	return;
        }
        swap(bag,0,1);
        
        if(check(bag))
        {
        	System.out.print("possible");
        	return;
        }
        swap(bag,1,2);	
        
        if(check(bag))
        {
        	System.out.print("impossible");
        	return;
        }
        swap(bag,0,2);
        
        if(check(bag))
        {
        	System.out.print("possible");
        	return;
        }

    }
}