문제:
대민이는 영어 소문자 알파벳으로 이루어진 문자열을 숫자로 인코딩하는 방법을 만들어냈습니다. 대민이의 문자열 인코딩 방식은 아래와 같습니다.

1. 문자열의 왼쪽부터 문자열의 각 문자가 몇 번째 알파벳인지 알아낸다. 이 수를 a라고 하자.
2. a가 9 이하라면 a를 그대로 쓰고, a가 10 이상이라면 a를 쓰고 그 뒤에 0을 붙인다.

예를 들어, "park"를 인코딩하면 다음과 같이 진행됩니다.

1. p는 16번째 알파벳이다. 16을 쓴 후, 뒤에 0을 붙여서 160을 쓴다. (160)
2. a는 1번째 알파벳이다. 1을 쓴다. (1601)
3. r은 18번째 알파벳이다. 18을 쓴 후, 뒤에 0을 붙여서 180을 쓴다. (1601180)
4. k는 11번째 알파벳이다. 11을 쓴 후, 뒤에 0을 붙여서 110을 쓴다. (1601180110)

따라서, park를 인코딩한 결과는 1601180110입니다.

대민이는 당신이 가지고 있던 소중한 문자열을 인코딩해버렸습니다. 
당신은 이 인코딩된 문자열을 다시 원본 문자열로 바꿔야 합니다. 어떤 문자열을 인코딩한 결과가 주어질 때, 해당 문자열을 구하는 프로그램을 작성해 주세요.

답안:

import java.io.*;

import java.util.*; 

//don't change 'Main' class name and  'public' accessor. 

public class Main {
 public static void main(String[] args) throws IOException { 

     Scanner scanner = new Scanner(System.in); 

     String a = scanner.next(); 
     
     StringBuilder temp = new StringBuilder(a);
     StringBuilder result = new StringBuilder();
     temp.append("***");
     for(int i=0;i<a.length();i++)
     {
    	 if(temp.charAt(i+2)=='0'&&temp.charAt(i+3)=='0')
    	 {
    		 result.append((char)('a'+Character.getNumericValue(temp.charAt(i))-1));
    	 }
    	 else if(temp.charAt(i+2)=='0')
    	 {
    		 result.append((char)('a'+Integer.parseInt(temp.substring(i,i+2))-1));
    		 i+=2;
    	 }
    	 else
    		 result.append((char)('a'+Character.getNumericValue(temp.charAt(i))-1));

     }
     System.out.print(result.toString());
 }
}